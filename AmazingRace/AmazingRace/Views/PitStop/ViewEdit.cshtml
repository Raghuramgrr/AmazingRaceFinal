@model AmazingRace.Model.Event
@{
    ViewBag.Title = "Pit Stop";
}

@*<div class="form-group">
    @Html.LabelFor(model => model.EventId, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.EventId, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.EventId, "", new { @class = "text-danger" })
    </div>
</div>*@

@Html.HiddenFor(model => model.EventId)

<html>
    <body onload="initialize()">
        <div id="wrapper">
            <div class="row">
                <div class="col">
                    <h2>View/Edit Pitstops</h2>
                </div>
                <div class="col" id="mapid" style="height: 480px;">
                    <script type="text/javascript" src="http://maps.google.com/maps/api/js?key=AIzaSyBQpTfnSPnxpYrCHraovUUS70x_B2FXKIc"></script>
                    <script>

var map;
var directionsDisplay;
var directionsService;
var geocoder;
var locations = [];
var pitstops = new Array();
var request;
var markers = [];


           function initialize() {


            @foreach(var loc in ((List<string>)@ViewBag.pitstops))
            {
                @:pitstops.push('@loc');
            }

                    directionsService = new google.maps.DirectionsService();
                    directionsDisplay = new google.maps.DirectionsRenderer();
                    request = {
                        travelMode: google.maps.TravelMode.DRIVING
                    };

                    assignMarkers();

            }

                    function assignMarkers() {
                        var myLatLng = new google.maps.LatLng(1.4, 103.79),
                            myOptions = {
                                zoom: 11,
                                center: myLatLng,
                                mapTypeId: google.maps.MapTypeId.ROADMAP
                            },
                            map = new google.maps.Map(document.getElementById('mapid'), myOptions);
                           directionsDisplay.setMap(map);
                        for (index = 0; index < pitstops.length; index++) {
                    getlatLng(pitstops[index],map);
                        }
                        google.maps.event.addListener(map, 'click', function (event) {
                            alert('In click');
                            var addr = geocodePosition(event.latLng.lat(), event.latLng.lng());
                            locations.push([event.latLng.lat(), event.latLng.lng()]);
                            placeMarker(map, event.latLng, addr);
                        });
            }


  function calRoute(){
      alert(locations);
  for (i = 0; i < locations.length; i++) {
  if (i == 0) request.origin = new google.maps.LatLng(locations[i][0],locations[i][1])
    else if (i == locations.length - 1) request.destination = new google.maps.LatLng(locations[i][0],locations[i][1]);
    else {
      if (!request.waypoints) request.waypoints = [];
      request.waypoints.push({
        location: new google.maps.LatLng(locations[i][0],locations[i][1]),
        stopover: false
      });
    }
                    }

                    directionsService.route(request, function (result, status) {
    if (status == google.maps.DirectionsStatus.OK) {
      directionsDisplay.setDirections(result);
    }
  });

  }

function placeMarker(map, location, addr) {

  var marker = new google.maps.Marker({
      position: location,
      title: addr,
     visible: true
    });
markers.push(marker);
marker.setMap(map);
}

            function geocodePosition(lat,lng) {
                var latlng = new google.maps.LatLng(lat, lng);
                var geocoder = new google.maps.Geocoder();
                var address;
                geocoder.geocode({ 'latLng': latlng }, function (results, status) {
                    if (status !== google.maps.GeocoderStatus.OK) {
                        alert(status);
                    }
                    if (status == google.maps.GeocoderStatus.OK) {
                        address = (results[0].formatted_address);
                        pitstops.push(address);
                    }
                });

                return address;
            }

                    function getlatLng(address, map) {
                        var latLng = [];
                        var geocoder = new google.maps.Geocoder();
                        geocoder.geocode({ 'address': address }, function (results, status) {
                            latLng = [];
                                if (status == google.maps.GeocoderStatus.OK) {
                                    latLng.push([results[0].geometry.location.lat(), results[0].geometry.location.lng()]);
                                    locations.push([results[0].geometry.location.lat(), results[0].geometry.location.lng()]);
                                    var myLatlng = new google.maps.LatLng(results[0].geometry.location.lat(), results[0].geometry.location.lng());
                                    placeMarker(map, myLatlng, address);
                                }

                            });


            }

                    function clearMarkers() {
                        for (var i = 0; i < markers.length; i++) {
                            markers[i].setMap(null);
                        }
                        markers.length = 0;
                        locations = [];
                        pitstops = [];
                        directionsDisplay.setMap(null);
                    }


                    function createPits() {
                        eventId = $('#EventId').val();
                $.ajax({
                    type: 'POST',
                    url: '/Pitstop/Edit',
                    data: { pitstops: pitstops, eventId: eventId},
                    traditional: true,
                    success: function (response) {
                        window.location.replace("/PitStop/Index");

                    }
                });
            }

                    </script>
                    <script src="/Scripts/jquery-1.10.2.js"></script>
                </div>
                <div class="col" align="left">
                    <br /><input type="button" value="Clear Markers" onclick="clearMarkers();" />
                    <input type="button" align="right" value="Create" onclick="createPits();" />
                </div>
            </div>
</div>
</body>
</html>